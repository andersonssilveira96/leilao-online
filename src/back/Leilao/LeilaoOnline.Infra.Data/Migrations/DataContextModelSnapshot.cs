// <auto-generated />
using System;
using LeilaoOnline.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LeilaoOnline.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LeilaoOnline.Domain.Entities.Leilao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAbertura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2020, 9, 28, 22, 46, 3, 642, DateTimeKind.Local).AddTicks(5195));

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("Usado")
                        .HasColumnType("bit");

                    b.Property<Guid>("UsuarioResponsavelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioResponsavelId");

                    b.ToTable("Leilao");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68f5c8be-d738-472d-b685-98a4cf6ea83f"),
                            DataAbertura = new DateTime(2020, 9, 28, 22, 46, 3, 654, DateTimeKind.Local).AddTicks(7312),
                            DataFinalizacao = new DateTime(2020, 9, 28, 22, 46, 3, 654, DateTimeKind.Local).AddTicks(7804),
                            Nome = "Leilão do Audi TT",
                            Usado = false,
                            UsuarioResponsavelId = new Guid("a7353f28-e5fb-4d51-888b-0564d67bcf2b"),
                            ValorInicial = 246000m
                        },
                        new
                        {
                            Id = new Guid("2699ed87-163e-48b3-ba3c-c8093d2d10a3"),
                            DataAbertura = new DateTime(2020, 9, 28, 22, 46, 3, 655, DateTimeKind.Local).AddTicks(154),
                            DataFinalizacao = new DateTime(2020, 9, 28, 22, 46, 3, 655, DateTimeKind.Local).AddTicks(166),
                            Nome = "Leilão da BMW 320i",
                            Usado = true,
                            UsuarioResponsavelId = new Guid("a7353f28-e5fb-4d51-888b-0564d67bcf2b"),
                            ValorInicial = 83500m
                        });
                });

            modelBuilder.Entity("LeilaoOnline.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7353f28-e5fb-4d51-888b-0564d67bcf2b"),
                            Ativo = true,
                            Email = "teste@teste.com.br",
                            Nome = "Usuario de Teste",
                            Senha = "202cb962ac59075b964b07152d234b70"
                        });
                });

            modelBuilder.Entity("LeilaoOnline.Domain.Entities.Leilao", b =>
                {
                    b.HasOne("LeilaoOnline.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Leilao")
                        .HasForeignKey("UsuarioResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
